using LinearAlgebra

IntegerProblem1 = (
    [4 15; 7 5; -3 4],
    [59, 53, 11],
    [4, 12]
)

IntegerProblem2 = (
    [12 5; 2 10],
    [60, 35],
    [2, 5]
)

IntegerProblem3 = (
    [6 -2; -3 11; 10 5; 13 6],
    [70, 32, 55, 23],
    [5, 1]
)

IntegerProblem4 = (
    [-11 -7; -3 -11;-5 4],
    [-87, -53, -17],
    [-7, -9]
)

BinaryProblem1 = (
    [[5 7 4 3]; -I; I],
    [14; zeros(4); ones(4)],
    [16,22,12,8]
)

BinaryProblem2 = (
    [[0.5 -0.5 0.5 0]; [2.5 6 1.5 0]; [1.5 2 1 0]; [1.5 2 1 -1000]; [1 2.5 0.5 1000]; [0 0 0 1];[0 0 0 -1]],
    [0.0,2000,800,800,1800,1,0],
    [130,280,70,0]
)


#A,G,b,c,h
MIPProblem1 = (
    [zeros(6,3) ; ones(1,3); -ones(1,3); [-1 0 0]; [-1 -1 0]; [0 -1 -1]; [0 0 -1]; zeros(6,3); -I; I],
    [[0.5 0.2 0 200 350 420]; [2 5 0 400 700 840]; [0.5 1 0 200 350 420]; [0 -1 0 0 0 0]; [0 0 1 1 1 1];
    [0 0 -1 -1 -1 -1];zeros(2,6); [0 0 1 0 0 0]; [0 0 0 1 0 0]; [0 0 0 0 1 0]; [0 0 0 0 0 1]; -I; zeros(6,6)],
    [420, 840, 420,-10,1,-1,1,-1, zeros(13)...,ones(3)...],
    zeros(3),
    [0.2,0.8,0,120,180,201]
)

MIPProblem1adj = (
    [zeros(6,3) ; ones(1,3); [-1 0 0]; [-1 -1 0]; [0 -1 -1]; [0 0 -1]; zeros(6,3); -I; I],
    [[0.5 0.2 0 200 350 420]; [2 5 0 400 700 840]; [0.5 1 0 200 350 420]; [0 -1 0 0 0 0]; [0 0 1 1 1 1];
    [0 0 -1 -1 -1 -1];zeros(1,6); [0 0 1 0 0 0]; [0 0 0 1 0 0]; [0 0 0 0 1 0]; [0 0 0 0 0 1]; -I; zeros(6,6)],
    [420, 840, 420,-10,1,-1,1, zeros(13)...,ones(3)...],
    zeros(3),
    [0.2,0.8,0,120,180,201]
)

BinaryProblem3 = (
    [[-1.0 -1 0 -1 -1 0 0 -1 -1 0];[-1 0 -1 0 0 0 0 0 0 0];[0 -1 0 0 -1 0 -1 0 0 -1];
    [0 0 -1 0 0 -1 0 -1 0 0]; [-1 -1 0 -1 0 -1 -1 0 -1 -1]; I; -I],
    [-ones(5); ones(10); zeros(10)],
    [-3, -5, -1, -2 ,-1, -4, -3, -1, -2, -2]
)

MIPProblem2 = (
    [zeros(1,4); [-8000 0 0 0]; [0 -9000 0 0 ]; [0 0 -6000 0]; [0 0 0 -10000]; zeros(16,4); I; -I],
    hcat([ones(1,4);I;zeros(8,4);-I;zeros(12,4)],
    [zeros(5,4);ones(1,4);-ones(1,4);zeros(2,4);I;zeros(4,4);-I;zeros(8,4)],
    [zeros(7,3);ones(1,3);-ones(1,3); [-1 0 0] ;[-1 -1 0];[0 -1 -1];[0 0 -1];zeros(16,3)]),
    [20000;zeros(4);1;-1;1;-1;zeros(12);ones(4);zeros(4)],
    [-5000, -3000, -1000, -600],
    [1.8,1.2,0.6,3.5,0,-10000,-14500,-16500,-6000,-8000,-9000]
)
